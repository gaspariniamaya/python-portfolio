#Rapunzel Scene
#Amaya, Sophie, Milan

#Amaya
#Initialize
import turtle
amaya = turtle.Turtle()
amaya.speed(50)
#Functions
#this function draws the sky
def sky():
    amaya.penup()
    amaya.goto(-480, 400)
    amaya.pendown()
    amaya.color("#701469") #Each color is a different gradient
    amaya.pensize(30)
    amaya.forward(1000)
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.left(90)
    amaya.forward(1000)
    amaya.color("#9c224e")
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.left(90)
    amaya.forward(1000)
    amaya.color("#af2d19")
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.color("#e36d0c")
    amaya.left(90)
    amaya.forward(1000)
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.color("#ffa00d")
    amaya.left(90)
    amaya.forward(1000)
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000) 
    amaya.left(90)
    amaya.forward(30)
    amaya.left(90)
    amaya.forward(1000)
#This function draws the water, its a reflection of the sky
def water(color):
    amaya.right(90)
    amaya.forward(30)
    amaya.color(color)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.left(90)
    amaya.forward(1000)
    amaya.color("#e36d0c")
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.left(90)
    amaya.forward(1000)
    amaya.color("#af2d19")
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.color("#9c224e")
    amaya.left(90)
    amaya.forward(1000)
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.color("#701469")
    amaya.left(90)
    amaya.forward(1000)
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.left(90)
    amaya.forward(1000)
    amaya.right(90)
    amaya.forward(30)
    amaya.right(90)
    amaya.forward(1000)
    amaya.left(90)
    amaya.forward(30)
    amaya.left(90)
    amaya.color("#59006f")
    for i in range(3):
        amaya.forward(1000)
        amaya.right(90)
        amaya.forward(30)
        amaya.right(90)
        amaya.forward(1000)
        amaya.left(90)
        amaya.forward(30)
        amaya.left(90)
#this connects the sky and water
def background(color):
    sky()
    water(color)

#Sophie
#Castle
#Initialize
import turtle
sophie = turtle.Turtle()
sophie.speed(50)
sophie.penup()
sophie.forward(190)
sophie.pendown()
sophie.left(90)
#functions
def castle(): #this creates the main castle outline
    sophie.begin_fill()
    sophie.forward(50)
    sophie.left(20)
    sophie.forward(20)
    sophie.right(20)
    sophie.pensize(3)
    sophie.forward(20)#this is how I do the lines on top of the castles points
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(160)
    sophie.forward(20)
    sophie.left(20)
    sophie.forward(50)
    sophie.right(90)
    sophie.forward(8)
    sophie.right(90)
    sophie.forward(55)
    sophie.left(30)
    sophie.forward(30)
    sophie.right(30)
    sophie.pensize(3)
    sophie.forward(30)
    sophie.backward(30)
    sophie.pensize(1)
    sophie.left(150)
    sophie.forward(30)
    sophie.left(30)
    sophie.forward(25)
    sophie.right(90)
    sophie.forward(10)
    sophie.right(90)
    sophie.forward(100)
    sophie.left(40)
    sophie.forward(40)
    sophie.right(40)
    sophie.pensize(3)
    sophie.forward(20)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(140)
    sophie.forward(40)
    sophie.left(40)
    sophie.forward(27)
    sophie.right(90)
    sophie.forward(10)
    sophie.right(90)
    sophie.forward(15)
    sophie.left(90)
    sophie.forward(9)
    sophie.left(90)
    sophie.forward(15)
    sophie.right(90)
    sophie.forward(6)
    sophie.right(90)
    sophie.forward(4)
    sophie.left(90)
    sophie.forward(3)
    sophie.left(90)
    sophie.forward(4)
    sophie.right(90)
    sophie.forward(6)
    sophie.right(90)
    sophie.forward(70)
    sophie.left(30)
    sophie.forward(30)
    sophie.right(30)
    sophie.pensize(3)
    sophie.forward(20)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(150)
    sophie.forward(30)
    sophie.left(30)
    sophie.forward(62)
    sophie.right(90)
    sophie.forward(10)
    sophie.right(90)
    sophie.forward(80)
    sophie.left(20)
    sophie.forward(35)
    sophie.right(20)
    sophie.pensize(3)
    sophie.forward(20)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(160)
    sophie.forward(35)
    sophie.left(20)
    sophie.forward(42)
    sophie.right(90)
    sophie.forward(7)
    sophie.right(90)
    sophie.forward(15)
    sophie.left(15)
    sophie.forward(30)
    sophie.right(15)
    sophie.pensize(3)
    sophie.forward(20)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(170)
    sophie.forward(30)
    sophie.left(10)
    sophie.forward(35)
    sophie.right(90)
    sophie.forward(9)
    sophie.right(90)
    sophie.forward(150)
    sophie.left(40)
    sophie.forward(30)
    sophie.right(40)
    sophie.pensize(3)
    sophie.forward(30)
    sophie.backward(30)
    sophie.pensize(1)
    sophie.left(140)
    sophie.forward(30)
    sophie.left(40)
    sophie.forward(100)
    sophie.right(90)
    sophie.forward(8)
    sophie.right(90)
    sophie.forward(90)
    sophie.left(30)
    sophie.forward(40)
    sophie.right(30)
    sophie.pensize(3)
    sophie.forward(20)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(150)
    sophie.forward(40)
    sophie.left(30)
    sophie.forward(80)
    sophie.right(90)
    sophie.forward(20)
    sophie.right(90)
    sophie.forward(80)
    sophie.left(20)
    sophie.forward(30)
    sophie.right(20)
    sophie.pensize(3)
    sophie.forward(15)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(160)
    sophie.forward(30)
    sophie.right(160)
    sophie.forward(55)
    sophie.left(40)
    sophie.forward(35)
    sophie.right(40)
    sophie.pensize(3)
    sophie.forward(25)
    sophie.backward(25)
    sophie.pensize(1)
    sophie.left(140)
    sophie.forward(35)
    sophie.left(40)
    sophie.forward(75)
    sophie.right(90)
    sophie.forward(5)
    sophie.right(90)
    sophie.forward(40)
    sophie.left(30)
    sophie.forward(25)
    sophie.right(30)
    sophie.pensize(3)
    sophie.forward(20)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(150)
    sophie.forward(25)
    sophie.left(30)
    sophie.forward(90)
    sophie.right(90)
    sophie.forward(20)
    sophie.right(90)
    sophie.left(30)
    sophie.forward(25)
    sophie.right(30)
    sophie.pensize(3)
    sophie.forward(20)
    sophie.backward(20)
    sophie.pensize(1)
    sophie.left(150)
    sophie.forward(20)
    sophie.left(30)
    sophie.forward(80)
    sophie.right(90)
    sophie.forward(5)
    sophie.right(90)
    sophie.forward(5)
    sophie.left(90)
    sophie.forward(5)
    sophie.left(90)
    sophie.forward(5)
    sophie.right(90)
    sophie.forward(5)
    sophie.right(90)
    sophie.forward(35)
    sophie.right(90)
    sophie.forward(5)
    sophie.left(120)
    sophie.forward(35)
    sophie.right(30)
    sophie.pensize(3)
    sophie.forward(15)
    sophie.backward(15)
    sophie.pensize(1)
    sophie.left(150)
    sophie.forward(35)
    sophie.left(120)
    sophie.forward(5)
    sophie.right(90)
    sophie.forward(45)
    sophie.right(50)
    sophie.forward(185)#this is when the downward hill slope occurs
    sophie.left(140)
    sophie.forward(950)
    sophie.left(180)
    sophie.right(10)
def hills():#this creates the hills on the right side of the picture
    for i in range(5): #this is the loop to make the tiny hills
        sophie.forward(50)
        sophie.left(50)
        sophie.forward(12)
        sophie.right(50)
    sophie.end_fill()
def finalcastle(color): #this creates the parameter which allows me to choose the color of the castle
    sophie.color(color)
    castle()
    hills()

#Milan
#Lanterns
#Initialize
import turtle
import random
milan=turtle.Turtle()
milan.speed(50)
#Functions
#this function makes the lantern
def lantern(size):
    for i in range(4):
        milan.forward(size)
        milan.left(90)
#this functions randomizes orange lanterns 
def orangelanterns(color):
    milan.right(55)
    for i in range(25):
        milan.penup()
        milan.goto(random.randint(-500,500), random.randint(-500,500))
        milan.pendown()
        milan.color(color)
        milan.begin_fill()
        lantern(random.randint(10,50))
        milan.end_fill()
#this function randomizes yellow lanterns
def yellowlanterns(color):
    for i in range(25):
        milan.penup()
        milan.goto(random.randint(-500,500), random.randint(-500,500))
        milan.pendown()
        milan.color(color)
        milan.begin_fill()
        lantern(random.randint(10,50))
        milan.end_fill()
#this function draws the boat
def boat():
    milan.goto(320,-100)
    milan.begin_fill()
    milan.forward(150)
    milan.left(90)
    milan.forward(50)
    milan.left(130)
    milan.circle(-140,85)
    milan.left(135)
    milan.circle(70,55)
    milan.end_fill()

def finalrapunzelscene(): #This function puts together all of the elements
    background("#ffa00d")
    boat()
    finalcastle("#000000")
    orangelanterns("orange")
    yellowlanterns("yellow")

#Main
finalrapunzelscene() #this calls our latest function and draws the scene











